
Step 1 :
Goto your Java directory in C drive 

eg 
C:\Program Files\Microsoft\jdk-11.0.20.8-hotspot\bin

 
open cmd in ( administrator ) mode and locate this path and add this command 

>>> cd C:\Program Files\Microsoft\jdk-11.0.20.8-hotspot\bin

>>> 
keytool -genkeypair -v -storetype PKCS12 -keystore my-upload-key.keystore -alias my-key-alias -keyalg RSA -keysize 2048 -validity 10000


enter all the answer and password and save this info 

anfer all submition it will create a .key
eg 

my-upload-key.keystore


cut ( ctrl + x ) 
this key 




Step 2 :
Setting up Gradle variables

Place the my-upload-key.keystore file under the android/app directory in your project folder.

Edit the file ~/.gradle/gradle.properties or android/gradle.properties, and add the following (replace ***** with the correct keystore password, alias and key password),

add in a last 

MYAPP_UPLOAD_STORE_FILE=my-upload-key.keystore
MYAPP_UPLOAD_KEY_ALIAS=my-key-alias
MYAPP_UPLOAD_STORE_PASSWORD=123456
MYAPP_UPLOAD_KEY_PASSWORD=123456



step 3
Adding signing config to your app's Gradle config

The last configuration step that needs to be done is to setup release builds to be signed using upload key. Edit the file 

android/app/build.gradle 

in your project folder, and add the signing config



for release version

release {
     if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
         storeFile file(MYAPP_UPLOAD_STORE_FILE)
         storePassword MYAPP_UPLOAD_STORE_PASSWORD
         keyAlias MYAPP_UPLOAD_KEY_ALIAS
         keyPassword MYAPP_UPLOAD_KEY_PASSWORD
       }
    }




replace 



signingConfig signingConfigs.release



>>> cd android 

>>>
gradlew clean


>>>
gradlew assembleRelease




